export class ValidationData {
    constructor() {
        this.types = ['fading', 'slidingY', 'slidingX'];
        this.transitionFnTypes = ['ease', 'linear', 'ease-in', 'ease-out', 'ease-in-out'];
    }
    timePerSlideChecker(timeFn) {
        if (typeof timeFn !== 'number')
            throw new Error('The timePerSlide variable must be a number!');
        return timeFn;
    }
    timingFnChecker(timeFn) {
        if (typeof timeFn !== 'number')
            throw new Error('The timingFn variable must be a number!');
        return timeFn;
    }
    transitionFnTypesChecker(transitionFn) {
        if (!this.transitionFnTypes.includes(transitionFn))
            throw new Error(`The transitionFn variable must be one of those - ${this.types}!`);
        return transitionFn;
    }
    typeChecker(type) {
        if (!this.types.includes(type))
            throw new Error(`The type variable must be one of those - ${this.transitionFnTypes}!`);
        return type;
    }
    progressBarChecker(bar) {
        if (typeof bar !== 'boolean')
            throw new Error('The progressBar variable must be a boolean!');
        return bar;
    }
    buttonsChecker(buttons) {
        if (typeof buttons !== 'boolean')
            throw new Error('The buttons variable must be a boolean!');
        return buttons;
    }
    parentChecker(parent) {
        if (typeof parent === 'string')
            parent = document.querySelector(parent);
        if (!parent)
            throw new Error('Carousel parent is not defined!');
        if (!(parent instanceof HTMLElement))
            throw new Error('Carousel parent is not an instance of HTMLElement!');
        return parent;
    }
    elementsChecker(elements, parentEl) {
        if (typeof elements === 'string')
            elements = Array.from(parentEl.querySelectorAll(elements));
        if (!elements || !elements.length)
            throw new Error('Array of carousel elements is empty!');
        if (!elements.every(e => e instanceof HTMLElement))
            throw new Error('Not every element of the array carousel is an instance of HTMLElement!');
        return elements;
    }
}
export const validationData = new ValidationData;
//# sourceMappingURL=validationData.js.map